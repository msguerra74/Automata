//-------------------------------------
//  FUNCTIONS / MIXINS / PLACEHOLDERS
//-------------------------------------

// ----- Functions ----- //

// PX to EM Conversion
// Example:
// font-size: em(18);
// or (target, context)
// font-size: em(18, 24);

$em-base: 16px !default;

@function em($px, $base: $em-base) {
  @if not unitless($px) {
    $px: strip-units($px);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($px / $base) * 1em;
}

// Strips the units from a value.
// Example:
// 16px to 16

@function strip-units($val) {
  @return ($val / ($val * 0 + 1));
}

// ----- Mixins ----- //

// Media Query Breakpoints
// Example:
// @include breakpoint(tablet) {}

// Tablet Portrait (481px to 768px)
$small: 30.0625em !default;
// Tablet Landscape (769px to 1024px)
$medium: 48.0625em !default;
// Medium Display (1025px to 1366px)
$large: 64.0625em !default;
// Large Display (1367px and up)
$xlarge: 85.4375em !default;

@mixin breakpoint($point) {
  @if $point == small {
    @media (min-width: $small) {
      @content;
    }
  }
  @else if $point == medium {
    @media (min-width: $medium) {
      @content;
    }
  }
  @else if $point == large {
    @media (min-width: $large) {
      @content;
    }
  }
  @else if $point == xlarge {
    @media (min-width: $xlarge) {
      @content;
    }
  }
}

// ----- HTML5 Boilerplate Helper Mixins ----- //
// http://github.com/h5bp/html5-boilerplate/

// Image replacement
// Example:
// @include image-replacement(image.png);

@mixin image-replacement($img: none, $x: 50%, $y: 50%) {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  *text-indent: -9999px; // OldIE
  &:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
  }
  @if $img != none {
    background-image: image-url($img);
    background-position: $x $y;
  }
}

// Sized image replacement
// Example:
// @include sized-image-replacement(image.png);

@mixin sized-image-replacement($img, $x: 50%, $y: 50%) {
  @include image-replacement($img, $x, $y);
  width: image-width($img);
  height: image-height($img);
}

// Hide from both screenreaders and browsers
// Example:
// @include hidden;

@mixin hidden {
  display: none !important;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders
// Example:
// @include visually-hidden;

@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Extends visuallyhidden to allow the element to be focusable when navigated to via the keyboard

  &.focusable:active,
  &.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

// Hide visually and from screenreaders, but maintain layout
// Example:
// @include invisible;

@mixin invisible {
  visibility: hidden;
}

// Clearfix
// Example:
// @include clear;

@mixin clear {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
  & {
    *zoom: 1; // OldIE
  }
}

// ----- Placeholders ----- //

// Clearfix
// Example:
// @extend %clear;

%clear {
  @include clear;
}