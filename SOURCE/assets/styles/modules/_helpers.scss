//------------------------------------------------
// Functions / Mixins / Placeholders / Animations
//------------------------------------------------

// ----- Functions ----- //

// PX to EM Conversion
// font-size: em(18); // if parent is $base-font-size
// font-size: em(18, 24); // if parent is, say 24px
@function em($px, $base: $base-font-size) {
  @if not unitless($px) {
    $px: strip-units($px);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($px / $base) * 1em;
}

// ----- Mixins ----- //

// Breakpoints
// @include breakpoint(tablet) {
// }
@mixin breakpoint($point) {
  @if $point == tablet {
    @media only screen and (min-width: $tablet) {
      @content;
    }
  }
  @else if $point == laptop {
    @media only screen and (min-width: $laptop) {
      @content;
    }
  }
  @else if $point == desktop {
    @media only screen and (min-width: $desktop) {
      @content;
    }
  }
}

// Prefixer
// @include prefixer(box-sizing, border-box, webkit moz spec);
$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: true !default;
$prefix-for-spec: true !default; // required for keyframe mixin

@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      @if $prefix-for-webkit {
        -webkit-#{$property}: $value;
      }
    }
    @else if $prefix == moz {
      @if $prefix-for-mozilla {
        -moz-#{$property}: $value;
      }
    }
    @else if $prefix == ms {
      @if $prefix-for-microsoft {
        -ms-#{$property}: $value;
      }
    }
    @else if $prefix == o {
      @if $prefix-for-opera {
        -o-#{$property}: $value;
      }
    }
    @else if $prefix == spec {
      @if $prefix-for-spec {
        #{$property}: $value;
      }
    }
    @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin disable-prefix-for-all() {
  $prefix-for-webkit: false;
  $prefix-for-mozilla: false;
  $prefix-for-microsoft: false;
  $prefix-for-opera: false;
  $prefix-for-spec: false;
}

// ----- HTML5 Boilerplate Helper Mixins ----- //
// http://github.com/h5bp/html5-boilerplate/

// Image replacement
// @include image-replacement(image.png);
@mixin image-replacement($img: none, $x: 50%, $y: 50%) {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  *text-indent: -9999px; // IE 6/7
  &:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
  }
  @if $img != none {
    background-image: image-url($img);
    background-position: $x $y;
  }
}

// Sized image replacement
// @include sized-image-replacement(image.png);
@mixin sized-image-replacement($img, $x: 50%, $y: 50%) {
  @include image-replacement($img, $x, $y);
  width: image-width($img);
  height: image-height($img);
}

// Hide from both screenreaders and browsers
// @include hidden;
@mixin hidden {
  display: none !important;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders
// @include visually-hidden;
@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Extends visuallyhidden to allow the element to be focusable when navigated to via the keyboard
  &.focusable:active,
  &.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

// Hide visually and from screenreaders, but maintain layout
// @include invisible;
@mixin invisible {
  visibility: hidden;
}

// Clearfix
// @include clear;
@mixin clear {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
  & {
    *zoom: 1; // IE 6/7
  }
}

// ----- Placeholders -----//

// Clearfix
// @extend %clear;
%clear {
  @include clear;
}

// ----- Keyframe Animations ----- //

