// ------------------------------ //
// Grid Column, Container, Row
// ------------------------------ //

// ---------- Column ---------- //

// Usage
// @include column(columns, push, pull, offset, align);

// Arguments
// columns: Number of columns out of total $columns - (Default: $columns)
// $_push: Number - (Default: 0)
// $_pull: Number - (Default: 0)
// $_offset: Number - (Default: 0)
// $_align: left, center, right - (Default: left)

// Note
// Parent must be a row

@mixin column($_columns: $columns, $_push: 0, $_pull: 0, $_offset: 0, $_align: left) {
  $_column: 100% / $columns;
  @if $_align != "center" {
    float: $_align;
  }
  @if $_push != 0 {
    left: $_push * $_column;
  }
  @if $_align == "center" {
    margin-left: auto;
    margin-right: auto;
  }
  @if $_offset != 0 {
    @if $_align == "center" or $_align == "right" {}
    @else {
      margin-left: $_offset * $_column;
    }
  }
  @include rem-px(padding-left, $gutter / 2);
  @include rem-px(padding-right, $gutter / 2);
  position: relative;
  @if $_pull != 0 {
    right: $_pull * $_column;
  }
  width: $_columns * $_column;
}

// ---------- Container ---------- //

// Usage
// @include container(max-width, type, align, margin-bottom, margin-top);

// Arguments
// $_max-width: Number - (Default: 100)
// $_type: fixed, fluid - (Default: fluid)
// $_align: left, center, right - (Default: center)
// $_margin-bottom: Number - (Default: 0)
// $_margin-top: Number - (Default: 0)

// Note
// Do not nest containers in other containers

@mixin container($_max-width: 100, $_type: fluid, $_align: center, $_margin-bottom: 0, $_margin-top: 0) {
  @include clear;
  clear: both;
  @if $_align == "left" {
    float: left;
  }
  @else if $_align == "right" {
    float: right;
  }
  @if $_margin-bottom != 0 {
    @include rem-px(margin-bottom, $_margin-bottom);
  }
  @else {
    margin-left: auto;
    margin-right: auto;
  }
  @if $_margin-top != 0 {
    @include rem-px(margin-top, $_margin-top);
  }
  @if $_type == "fixed" {
    @include rem-px(max-width, $_max-width);
  }
  @else {
    @if $_max-width > 100 or $_max-width > 100% {
      max-width: 100%;
    }
    @else {
      max-width: strip-units($_max-width) * 1%;
    }
  }
  @include rem-px(padding-left, $gutter);
  @include rem-px(padding-right, $gutter);
}

// ---------- Row ---------- //

// Usage
// @include row(margin-bottom, margin-top);

// Arguments
// $_margin-bottom: Number - (Default: Spacer)
// $_margin-top: Number - (Default: 0)

// Note
// Parent must be a container

@mixin row($_margin-bottom: $spacer, $_margin-top: 0) {
  @include clear;
  @include rem-px(margin-bottom, $_margin-bottom);
  @include rem-px(margin-left, -$gutter / 2);
  @include rem-px(margin-right, -$gutter / 2);
  @if $_margin-top != 0 {
    @include rem-px(margin-top, $_margin-top);
  }
}